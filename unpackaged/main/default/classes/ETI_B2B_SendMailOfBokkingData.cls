global class ETI_B2B_SendMailOfBokkingData Implements Schedulable
{
    global void execute(SchedulableContext sc){
        sendmail();
    }
    
    public void sendmail(){
        String profileName = System.label.ETI_ProfileNameForMail;
        if(profileName != null && profileName != ''){
            String body = '<table><tr><th>Name</th><th>Booking Date</th><th>Purpose Type</th><th>Payment Status</th><th>Location</th></tr>';
            id B2BRecordtypeId = Schema.getGlobalDescribe().get('Account').getDescribe().getRecordTypeInfosByDeveloperName().get(Label.ETI_Business_B2B_Inspection).getRecordTypeId();
            id externalrecordTypeId = Schema.getGlobalDescribe().get('ETI_Booking__c').getDescribe().getRecordTypeInfosByName().get('External').getRecordTypeId();
            for(ETI_Booking__c booking : [SELECT Name, Booking_Date__c, Booking_Date_Time__c, Purpose_Type__r.Name,  Payment_Type__c, Payment_Status__c, User__r.RecordTypeId, ET_Location__r.Name  FROM ETI_Booking__c  WHERE Booking_Date__c = TODAY AND recordtypeid = :externalrecordTypeId]){
                if(B2BRecordtypeId == booking.User__r.RecordTypeId ){
                    body += '<tr><td>' + booking.Name + '</td>';
                    body += '<td>' + booking.Booking_Date__c + '</td>';
                    body += '<td>' +booking.Purpose_Type__r.Name + '</td>';
                    body += '<td>' +booking.Payment_Status__c + '</td>';
                    body += '<td>' + booking.ET_Location__r.Name+ '</td> </tr>';
                }
            }
             body += '</table>';
             Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
            string [] toaddress= New string[]{};
            for(User  userRecord : [SELECT Email FROM User WHERE IsActive = true AND Profile.Name =: profileName]){
                toaddress.add(userRecord.Email);
            }
           
            email.setSubject('Today External Booking');
            email.setHtmlBody(body);
            //email.setPlainTextBody('Testing Apex Scheduler-Body');
            email.setToAddresses(toaddress);
            if(body != '' && toaddress.Size() > 0){
               Messaging.sendEmail(New Messaging.SingleEmailMessage[]{email}); 
            }
            
        }
        
    }
    public static void utilityMethod(){
        
        integer i=0;
        
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
          
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
          
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
          
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
          
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
          
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
        i++;
         i++;
         i++;
     }
}